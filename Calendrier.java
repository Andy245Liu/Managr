/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package managr;

import java.util.Date;
import javax.swing.JOptionPane;
import com.toedter.calendar.JDayChooser;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 * Class for calendar Swing GUI
 * @author Andy
 * @since JDK 7u80
 * @version 7.0
 * 
 */
public class Calendrier extends javax.swing.JFrame {
    /**
     * Generated static method
     * @return Calendrier, the calendar view object
     */
    static Calendrier getInstance() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Constructor to create new form Calendar
     */
    public Calendrier() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dateTasks = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayDate = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tasksDisplayPanel = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        returnToCalendrier = new javax.swing.JButton();
        addStudyButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        todayStudiesPane = new javax.swing.JTextPane();
        addStudy = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        studySubjectField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        startHourPicker = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        startMinutePicker = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        createStudyPeriodButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        studyLengthPicker = new javax.swing.JComboBox();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        selectDateButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        showEventDates = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        dateTasks.setMinimumSize(new java.awt.Dimension(755, 620));
        dateTasks.setResizable(false);

        jLabel1.setText("Date:");

        jScrollPane2.setViewportView(displayDate);

        jScrollPane3.setViewportView(tasksDisplayPanel);

        jLabel2.setText("Your Tasks For Today Sorted in Order of Priority (based on weighted importance and proximity of due date)");

        returnToCalendrier.setText("Return");
        returnToCalendrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToCalendrierActionPerformed(evt);
            }
        });

        addStudyButton.setText("Add Study Period");
        addStudyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudyButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Your Scheduled Study Sessions for Today ");

        jScrollPane4.setViewportView(todayStudiesPane);

        javax.swing.GroupLayout dateTasksLayout = new javax.swing.GroupLayout(dateTasks.getContentPane());
        dateTasks.getContentPane().setLayout(dateTasksLayout);
        dateTasksLayout.setHorizontalGroup(
            dateTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateTasksLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(dateTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                        .addComponent(jScrollPane4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateTasksLayout.createSequentialGroup()
                        .addComponent(returnToCalendrier)
                        .addGap(60, 60, 60)
                        .addComponent(addStudyButton)
                        .addGap(160, 160, 160)))
                .addContainerGap(156, Short.MAX_VALUE))
            .addGroup(dateTasksLayout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(dateTasksLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dateTasksLayout.setVerticalGroup(
            dateTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateTasksLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(dateTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dateTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnToCalendrier)
                    .addComponent(addStudyButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        addStudy.setMinimumSize(new java.awt.Dimension(1370, 489));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Add A Study Period For Your Tasks");

        jLabel4.setText("Please enter the name of the subject that you will be studying for: ");

        jLabel5.setText("For how many hours will this study session last? :");

        startHourPicker.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "00", "01", "02", "03", "04", "05" }));

        jLabel6.setText("Start Hour of the Day (24-hour clock):");

        startMinutePicker.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "15", "30", "45" }));

        jLabel7.setText("Start minute of study period:");

        createStudyPeriodButton.setText("Create Study Period");
        createStudyPeriodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createStudyPeriodButtonActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("ATTENTION: You may want to double check that your study period does not interfere or coincide with");

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("a current task (e.g., a test).");

        studyLengthPicker.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));

        javax.swing.GroupLayout addStudyLayout = new javax.swing.GroupLayout(addStudy.getContentPane());
        addStudy.getContentPane().setLayout(addStudyLayout);
        addStudyLayout.setHorizontalGroup(
            addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudyLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(addStudyLayout.createSequentialGroup()
                            .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(startMinutePicker, 0, 231, Short.MAX_VALUE)
                                .addComponent(startHourPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(studySubjectField, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(studyLengthPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(addStudyLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(171, 171, 171)))
                    .addComponent(jLabel8)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addStudyLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(429, 429, 429)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addStudyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createStudyPeriodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(425, 425, 425))
        );
        addStudyLayout.setVerticalGroup(
            addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudyLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studySubjectField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studyLengthPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startHourPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(addStudyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startMinutePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(createStudyPeriodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDateChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooser1MouseClicked(evt);
            }
        });

        selectDateButton.setText("Select Date");
        selectDateButton.setToolTipText("");
        selectDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDateButtonActionPerformed(evt);
            }
        });

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Select a date to view here:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Calendar View");

        showEventDates.setText("Show Days With Events for the Displayed Month");
        showEventDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEventDatesActionPerformed(evt);
            }
        });

        jLabel13.setText("Red = Day has both Tasks and Studies, Blue = Day has Tasks, Yellow = Day Has Studies");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showEventDates)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(selectDateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(288, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 1087, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showEventDates)
                .addGap(19, 19, 19)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectDateButton)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addComponent(returnButton)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

  
 /**
 * Defines the action performed when the button is pressed
 * @param evt the button select date being pressed
 */
    private void selectDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDateButtonActionPerformed
        
       
       //Creates a new instance of the controller class
        CalendrierController controller = new CalendrierController(UserManagement.getUser(), this);
        //retrieves the date selected in the date picker
        Date selected =  this.jDateChooser1.getDate();
       
        if (selected != null){
         
            //formats the selected date to yyyy-mm-dd
            DateFormat formatted = new SimpleDateFormat("yyyy-MM-dd");
            String selectedDate = formatted.format(selected); 
            //opens the date window for selected date
            dateTasks.setVisible(true);
            this.displayDate.setText(selectedDate);
            //sorts the tasks of the current date by priority index
            ArrayList<Task> todaysTasks = controller.sortByPriority();
            //sorts the study sessions of the selected date by time
            ArrayList<Study> todaysStudies = controller.sortByDate();
            String displayStudies = "";
            String displayString = "";
            SimpleDateFormat formatter = new SimpleDateFormat("HH:mm");
           
            //iterates through the sorted list of tasks and prints each task the display text panel            
            for(int i = 0; i < todaysTasks.size(); i++){
                System.out.println("added");
                String name = ((Task)todaysTasks.get(i)).getName(); 
                String type = ((Task)todaysTasks.get(i)).getTaskType(); 
                String subject = ((Task)todaysTasks.get(i)).getSubject(); 
                Date date = ((Task)todaysTasks.get(i)).getDueDate();
             
                String time = formatter.format(date);
                //if the task is past its due date and time, adds ALREADY PAST DUE at the beginning of the task display
                if(((Task)todaysTasks.get(i)).urgency() < 0){
                   displayString = displayString + "ALREADY PAST DUE Name: " +name + "     Type: " + type + "     Subject: " + subject +"     Due at: "+time+"\n";  
                } else{
                displayString = displayString + "Name: " +name + "     Type: " + type + "     Subject: " + subject +"     Due at: "+time+"\n";                
                }
              }
            //iterates through the sorted studies list for the day and prints each study to the display text panel
            for(int j = 0; j < todaysStudies.size(); j++){
                String subject = ((Study)todaysStudies.get(j)).getSubject();
                int length = ((Study)todaysStudies.get(j)).getHours();
                String hr = ((Study)todaysStudies.get(j)).getStudyHour();
                String min = ((Study)todaysStudies.get(j)).getStudyMin();
                displayStudies = displayStudies + "Subject: "+subject+"     Length of study session (hrs): "+length+"     Start Time: "+hr+":"+min+"\n";
            }
            tasksDisplayPanel.setText(displayString);
            todayStudiesPane.setText(displayStudies);
            
        } else{
            // if a date has not been selected, show error message
            JOptionPane.showMessageDialog(addStudy, "Please select a date", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_selectDateButtonActionPerformed
/**
 * Method defining action for the return to home screen button
 * @param evt the return button being pressed
 */
    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        
        //displays HomeScreen and discards current window
         HomeScreen home = new HomeScreen();
         home.setVisible(true);
         dispose();
    }//GEN-LAST:event_returnButtonActionPerformed
//*Note this method is not used; it is prewritten(I did not write it), so no documentation
    private void jDateChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MouseClicked
        // TODO add your handling code here:
        //getDayPanel(); 
    }//GEN-LAST:event_jDateChooser1MouseClicked
/**
 * Clears all fields of the add Study dialogue box
 */
 private void resetStudyWindow(){
     studySubjectField.setText(null);
     startHourPicker.setSelectedItem("06");
    startMinutePicker.setSelectedItem("00");
     studyLengthPicker.setSelectedItem("1");
     
 }

/**
 * Responds to user clicking the create study button by adding the study session to a list and storing it to the database (done by calling methods to add study and store study in the CalendrierController).
 * @param evt the user clicking the create study button
 */
    private void createStudyPeriodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createStudyPeriodButtonActionPerformed
  
       
       // checks if the add Study form is completely filled out
        if(this.isFilledOut()){
            //CalendrierController controller = new CalendrierController(HomeScreen.myUser, this);
            
            //creates new instance of controller
             CalendrierController controller = new CalendrierController(UserManagement.getUser(), this);
             //adds study to the user's list
            controller.addStudy();
            
              
              //stores the added study
                controller.storeStudy();
                //prints out the updated study list
                
                ArrayList<Study> todaysStudies = controller.getDailyStudies();
                String displayStudies = "";
            for(int j = 0; j < todaysStudies.size(); j++){
                String subject = ((Study)todaysStudies.get(j)).getSubject();
                int length = ((Study)todaysStudies.get(j)).getHours();
                String hr = ((Study)todaysStudies.get(j)).getStudyHour();
                String min = ((Study)todaysStudies.get(j)).getStudyMin();
                displayStudies = displayStudies + "Subject: "+subject+"     Length of study session (hrs): "+length+"     Start Time: "+hr+":"+min+"\n";
            }
            //closes the add study dialogue box
            todayStudiesPane.setText(displayStudies);
            this.resetStudyWindow();
            addStudy.setVisible(false);
            
        } else{
            //shows error message if form is not filled out completely
           JOptionPane.showMessageDialog(this, "Please fill out all fields", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createStudyPeriodButtonActionPerformed
    /**
     * Shows the add study dialogue box when user clicks the addstudy button
     * @param evt addstudy button clicked
     */
    private void addStudyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudyButtonActionPerformed
        // TODO add your handling code here:
        addStudy.setVisible(true);
    }//GEN-LAST:event_addStudyButtonActionPerformed
    /**
     * Closes the daily tasks dialogue box when user hits return button
     * @param evt the return button being hit
     */
    private void returnToCalendrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToCalendrierActionPerformed
        // TODO add your handling code here:
        dateTasks.setVisible(false);
    }//GEN-LAST:event_returnToCalendrierActionPerformed

    /**
     * Responds to user clicking the showEventDatesAction button by colouring in the appropriate Calendar date boxes for that month (i.e., the dates with tasks and study sessions)
     * @param evt the user clicking the button
     */
    private void showEventDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEventDatesActionPerformed
        // TODO add your handling code here:
        
       
        
        //creates new instance of controller, calls the showEventDates method
        CalendrierController controller = new CalendrierController(UserManagement.getUser(), this);
        try {
            controller.showEventDates();
        } catch (ParseException ex) {
            Logger.getLogger(Calendrier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showEventDatesActionPerformed

    /**
     * Main method
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calendrier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calendrier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calendrier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calendrier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Calendrier().setVisible(true);
            }
        });
    }
    
    /**
     * Accessor method for the date selected.
     * @return the chosen date
     */
    public Date getSelectedDate(){
        return jDateChooser1.getDate();
    }
    
    /**
     * Accessor method to get the entered study subject
     * @return a string representing the study subject
     */
    public String getEnteredStudySubject(){
        return studySubjectField.getText();
    }
    /**
     * Accessor method to get the number of hours of study
     * @return an integer representing the study session length in hours
     */
    public int getSelectedStudyLength(){
        
        return Integer.parseInt((String)studyLengthPicker.getSelectedItem());
    }
    
    /**
     * Accessor method to get the hour of the day when the study period starts
     * @return a String representing the starting hour of day (24-hour clock)
     */
    public String getSelectedStudyHourStart(){
        return  (String) startHourPicker.getSelectedItem();
    }
    
    /**
     * Accessor method to get the minute of the hour when the study period starts
     * @return a String representing the starting minute of hour
     */
    public String getSelectedStudyMinuteStart(){
        return (String)startMinutePicker.getSelectedItem();
    }
    /**
     * Checks if the add Study field is filled out completely
     * @return boolean true if all required fields are required, false otherwise
     */
    public boolean isFilledOut(){
        if(studySubjectField.getText().equals("")){
            return false;
        } else{
            return true;
        }
  
    }
    
    /**
     * Accessor method to get JCalendar
     * @return returns the JCalendar
     */
    public com.toedter.calendar.JCalendar getCal(){
        return jCalendar1;
    }
    
  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog addStudy;
    private javax.swing.JButton addStudyButton;
    private javax.swing.JButton createStudyPeriodButton;
    private javax.swing.JDialog dateTasks;
    private javax.swing.JTextPane displayDate;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton returnButton;
    private javax.swing.JButton returnToCalendrier;
    private javax.swing.JButton selectDateButton;
    private javax.swing.JButton showEventDates;
    private javax.swing.JComboBox startHourPicker;
    private javax.swing.JComboBox startMinutePicker;
    private javax.swing.JComboBox studyLengthPicker;
    private javax.swing.JTextField studySubjectField;
    private javax.swing.JTextPane tasksDisplayPanel;
    private javax.swing.JTextPane todayStudiesPane;
    // End of variables declaration//GEN-END:variables
}
